#!/bin/bash

# Function to install packages
install_packages() {
  sudo apt autoremove -y 2>&1
  sudo apt update 2>&1


  # Redirect the output of apt install to a log file
  sudo apt install tmux gpg gcc make gettext unzip cmake build-essential python3-neovim jq wget curl apt-file python3-dev python3-pip tzdata dconf-cli uuid-runtime inetutils-ping rclone pkg-config libtool -y > install_log.txt 2>&1

  # Parse the log file to generate the summary
  echo "Packages installed:"
  awk '!/Reading|Building|Setting|Processing|Unpacking|Preparing|Selecting|Configuring|Removing|Cleaning|Adding|Updating|Setting|Creating/ && NF' install_log.txt
}

# Function to handle git operations
git_operations() {
  git config --global user.name "regular bill"
  git config --global user.email "regularbill@bill.com"

  # Check for access to the 'winslowb' GitHub repository
  if gh repo view https://github.com/winslowb/dotfiles.git &>/dev/null; then
    echo "You have access to the winslowb GitHub repository."
  else
    echo "You don't have access to the winslowb GitHub repository. Setting up authentication..."
    gh auth login
  fi
}

# Function to create directory if it doesn't exist
:h i
create_directory() {
  [ ! -d "$1" ] && mkdir -p "$1"
}


# Initial package updates and installs
install_packages

# GitHub CLI setup
if ! type -p curl > /dev/null; then
  install_packages curl
fi

{
  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/github
}
# NVM installation and Node.js setup
wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
export NVM_DIR="$HOME/.nvm"
mkdir $NVM_DIR
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
nvm install 18.14.2 2>&1 

# Install Bitwarden CLI globally
npm install -g @bitwarden/cli

# Login to Bitwarden
bw login

